<Window x:Class="FontAwesome6.Example.WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FontAwesome6.Example.WPF"
        xmlns:converters="clr-namespace:FontAwesome6.Example.WPF.Converters"
        xmlns:faf="http://schemas.fontawesome.com/icons/fonts"
        xmlns:fafap="http://schemas.fontawesome.com/icons/fonts/properties"
        xmlns:fas="http://schemas.fontawesome.com/icons/svg"        
        xmlns:fasap="http://schemas.fontawesome.com/icons/svg/properties"        
        mc:Ignorable="d"
        Title="FontAwesom6.Example.WPF" Height="675"  Width="900">
  <Window.DataContext>
    <local:MainWindowViewModel/>
  </Window.DataContext>
  <Window.Resources>
    <faf:IconNameConverter x:Key="IconNameConverter"/>
    <faf:StyleConverter x:Key="StyleConverter"/>
    <faf:ImageSourceConverter x:Key="ImageSourceConverter"/>
    <faf:DrawingConverter x:Key="DrawingConverter"/>
    <fas:ImageSourceConverter x:Key="SvgImageSourceConverter"/>
    <converters:NullableDoubleToStringConverter x:Key="NullableDoubleToStringConverter"/>
    <converters:HexColorStringToSolidColorBrushConverter x:Key="HexColorStringToSolidColorBrushConverter"/>
  </Window.Resources>
  <Window.Icon>
    <DrawingImage Drawing="{Binding SelectedIcon, Converter={StaticResource DrawingConverter}}"/>
  </Window.Icon>
  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="300"/>
      <ColumnDefinition Width="*"/>
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>
    
    <WrapPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal" Margin="5" >
      <StackPanel Margin="0,0,5,0" Orientation="Horizontal">
        <TextBlock Text="Icon count:"></TextBlock>
        <TextBlock Text="{Binding AllIcons.Count}" Margin="5,0,0,0"></TextBlock>
        <Separator Width="1" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="5,0,5,0"/>
      </StackPanel>
      <StackPanel Margin="0,0,5,0" Orientation="Horizontal">
        <TextBlock Text="Font Size:" VerticalAlignment="Center"/>
        <Slider Minimum="0" Maximum="60" Value="{Binding FontSize, UpdateSourceTrigger=PropertyChanged}" Margin="5,0,0,0" VerticalAlignment="Center" Width="100"/>
        <TextBlock Text="{Binding FontSize, StringFormat={}{0:#.##}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" VerticalAlignment="Center"/>
        <Separator Width="1" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="5,0,5,0"/>
      </StackPanel>
      <StackPanel Margin="0,0,5,0" Orientation="Horizontal">
        <TextBlock Text="Spin:" VerticalAlignment="Center"/>
        <CheckBox IsChecked="{Binding SpinIsEnabled, UpdateSourceTrigger=PropertyChanged}" Margin="5,0,0,0" VerticalAlignment="Center"/>
        <Slider Minimum="0" Maximum="10" Value="{Binding SpinDuration, UpdateSourceTrigger=PropertyChanged}" Width="150"  Margin="5,0,0,0"/>
        <Separator Width="1" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="5,0,5,0"/>
      </StackPanel>
      <StackPanel Margin="0,0,5,0" Orientation="Horizontal">
        <TextBlock Text="Pulse:" VerticalAlignment="Center"/>
        <CheckBox IsChecked="{Binding PulseIsEnabled, UpdateSourceTrigger=PropertyChanged}" Margin="5,0,0,0" VerticalAlignment="Center"/>
        <Slider Minimum="0" Maximum="10" Value="{Binding PulseDuration, UpdateSourceTrigger=PropertyChanged}" Width="150"  Margin="5,0,0,0"/>
        <Separator Width="1" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="5,0,5,0"/>
      </StackPanel>
      <StackPanel Margin="0,0,5,0" Orientation="Horizontal">
        <TextBlock Text="Rotation:" VerticalAlignment="Center"/>
        <Slider Minimum="0" Maximum="360" Value="{Binding Rotation, UpdateSourceTrigger=PropertyChanged}" Margin="5,0,0,0" VerticalAlignment="Center" Width="100"/>
        <Separator Width="1" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="5,0,5,0"/>
      </StackPanel>
      <StackPanel Margin="0,0,5,0" Orientation="Horizontal">
        <TextBlock Text="Flip:" VerticalAlignment="Center"/>
        <ComboBox ItemsSource="{Binding FlipOrientations}" SelectedItem="{Binding FlipOrientation, UpdateSourceTrigger=PropertyChanged}" Margin="5,0,0,0" VerticalAlignment="Center" Width="100"/>
        <Separator Width="1" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="5,0,5,0"/>
      </StackPanel>
      <StackPanel Margin="0,0,5,0" Orientation="Horizontal">
        <TextBlock Text="Visibility:" VerticalAlignment="Center"/>
        <ComboBox ItemsSource="{Binding Visibilities}" SelectedItem="{Binding Visibility, UpdateSourceTrigger=PropertyChanged}" Margin="5,0,0,0" VerticalAlignment="Center" Width="100"/>
      </StackPanel>
      <StackPanel Margin="0,0,5,0" Orientation="Horizontal">
        <TextBlock Text="Swap Opacity:" VerticalAlignment="Center"/>
        <CheckBox IsChecked="{Binding SwapOpacity, UpdateSourceTrigger=PropertyChanged}" Margin="5,0,0,0" VerticalAlignment="Center"/>
        <Separator Width="1" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="5,0,5,0"/>
      </StackPanel>
      <StackPanel Margin="0,0,5,0" Orientation="Horizontal">
        <TextBlock Text="Primary Color:" VerticalAlignment="Center"/>
        <TextBox Width="75" Text="{Binding PrimaryColor, Converter={StaticResource HexColorStringToSolidColorBrushConverter}}" Margin="5,0,0,0"></TextBox>
        <Separator Width="1" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="5,0,5,0"/>
      </StackPanel>
      <StackPanel Margin="0,0,5,0" Orientation="Horizontal">
        <TextBlock Text="Secondary Color:" VerticalAlignment="Center"/>
        <TextBox Width="75" Text="{Binding SecondaryColor, Converter={StaticResource HexColorStringToSolidColorBrushConverter}}"  Margin="5,0,0,0"></TextBox>
        <Separator Width="1" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="5,0,5,0"/>
      </StackPanel>
      <StackPanel Margin="0,0,5,0" Orientation="Horizontal">
        <TextBlock Text="Primary Opacity:" VerticalAlignment="Center"/>
        <TextBox Width="25" Text="{Binding PrimaryOpacity, Converter={StaticResource NullableDoubleToStringConverter}}"  Margin="5,0,0,0"></TextBox>
        <Separator Width="1" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="5,0,5,0"/>
      </StackPanel>
      <StackPanel Margin="0,0,5,0" Orientation="Horizontal">
        <TextBlock Text="Secondary Opacity:" VerticalAlignment="Center"/>
        <TextBox Width="25" Text="{Binding SecondaryOpacity, Converter={StaticResource NullableDoubleToStringConverter}}"  Margin="5,0,0,0"></TextBox>
        <Separator Width="1" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="5,0,5,0"/>
      </StackPanel>
    </WrapPanel>

    <ListView Grid.Row="1" Grid.Column="0" ItemsSource="{Binding AllIcons}" SelectedItem="{Binding SelectedIcon}">
      <ListView.View>
        <GridView>
          <GridViewColumn Header="Icon">
            <GridViewColumn.CellTemplate>
              <DataTemplate>
                <faf:ImageAwesome Icon="{Binding}" Width="32" Height="32" Foreground="Black" HorizontalAlignment="Center"/>
              </DataTemplate>
            </GridViewColumn.CellTemplate>
          </GridViewColumn>
          <GridViewColumn Header="Name" DisplayMemberBinding="{Binding Converter={StaticResource IconNameConverter}}"/>
          <GridViewColumn Header="Style" DisplayMemberBinding="{Binding Converter={StaticResource StyleConverter}}"/>
        </GridView>
      </ListView.View>
    </ListView>

    <Grid Grid.Row="2" Grid.Column="1">
      <Grid.ColumnDefinitions>
        <ColumnDefinition/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition/>
      </Grid.RowDefinitions>

      <Grid Grid.Column="0">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="200"/>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="auto"/>
          <RowDefinition Height="auto"/>
          <RowDefinition Height="auto"/>
          <RowDefinition Height="auto"/>
          <RowDefinition Height="auto"/>
          <RowDefinition Height="auto"/>
          <RowDefinition Height="auto"/>
          <RowDefinition Height="auto"/>
          <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Rectangle Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Fill="#eeeeee"></Rectangle>
        <Rectangle Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Fill="#eeeeee"></Rectangle>
        <Rectangle Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" Fill="#eeeeee"></Rectangle>
        <Rectangle Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="3" Fill="#eeeeee"></Rectangle>
        <Rectangle Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="3" Fill="#eeeeee"></Rectangle>


        <Rectangle Grid.Row="0" Grid.Column="0" Grid.RowSpan="9" Fill="#eeeeee"></Rectangle>
        <Rectangle Grid.Row="1" Grid.Column="1" Grid.RowSpan="9" Fill="#dddddd"></Rectangle>
        <Rectangle Grid.Row="1" Grid.Column="2" Grid.RowSpan="9" Fill="#dddddd"></Rectangle>

        <Border Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" BorderThickness="0,0,0,2" BorderBrush="White" Margin="0,0,0,2"></Border>
        <Border Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" BorderThickness="0,0,0,2" BorderBrush="White" Margin="0,0,0,2"></Border>
        <Border Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" BorderThickness="0,0,0,2" BorderBrush="White" Margin="0,0,0,2"></Border>
        <Border Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3" BorderThickness="0,0,0,2" BorderBrush="White" Margin="0,0,0,2"></Border>
        <Border Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="3" BorderThickness="0,0,0,2" BorderBrush="White" Margin="0,0,0,2"></Border>
        <Border Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="3" BorderThickness="0,0,0,2" BorderBrush="White" Margin="0,0,0,2"></Border>
        <Border Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="3" BorderThickness="0,0,0,2" BorderBrush="White" Margin="0,0,0,2"></Border>

        <TextBlock Grid.Row="0" Grid.Column="0" Text="Description" HorizontalAlignment="Center" FontWeight="Bold" Margin="5"/>
        <TextBlock Grid.Row="0" Grid.Column="1" Text="FontAwesome6.Fonts" HorizontalAlignment="Center" FontWeight="Bold" Margin="5"/>
        <TextBlock Grid.Row="0" Grid.Column="2" Text="FontAwesome6.Svg" HorizontalAlignment="Center" FontWeight="Bold" Margin="5"/>


        <TextBlock Grid.Row="1" Grid.Column="0" Text="FontAwesome" TextWrapping="Wrap" FontWeight="Bold" Margin="5,0,0,0"/>
        <faf:FontAwesome Grid.Row="1" Grid.Column="1"
                         Icon="{Binding SelectedIcon}" FontSize="{Binding FontSize}" 
                         Spin="{Binding SpinIsEnabled}" SpinDuration="{Binding SpinDuration}" 
                         Pulse="{Binding PulseIsEnabled}" PulseDuration="{Binding PulseDuration}" 
                         FlipOrientation="{Binding FlipOrientation}" Rotation="{Binding Rotation}" 
                         Visibility="{Binding Visibility}" Margin="10"/>

        <TextBlock Grid.Row="2" Grid.Column="0" Text="ImageAwesome"  TextWrapping="Wrap" FontWeight="Bold" Margin="5,0,0,0"/>
        <faf:ImageAwesome Grid.Row="2" Grid.Column="1"
                          Icon="{Binding SelectedIcon}" SwapOpacity="{Binding SwapOpacity}"
                          PrimaryColor="{Binding PrimaryColor}" SecondaryColor="{Binding SecondaryColor}" 
                          PrimaryOpacity="{Binding PrimaryOpacity}" SecondaryOpacity="{Binding SecondaryOpacity}"
                          Spin="{Binding SpinIsEnabled}" SpinDuration="{Binding SpinDuration}" 
                          Pulse="{Binding PulseIsEnabled}" PulseDuration="{Binding PulseDuration}" 
                          FlipOrientation="{Binding FlipOrientation}" Rotation="{Binding Rotation}" 
                          Visibility="{Binding Visibility}"  Width="50" Height="50" Margin="10"/>

        <fas:ImageAwesome Grid.Row="2" Grid.Column="2"
                          Icon="{Binding SelectedIcon}" SwapOpacity="{Binding SwapOpacity}"
                          PrimaryColor="{Binding PrimaryColor}" SecondaryColor="{Binding SecondaryColor}" 
                          PrimaryOpacity="{Binding PrimaryOpacity}" SecondaryOpacity="{Binding SecondaryOpacity}"
                          Spin="{Binding SpinIsEnabled}" SpinDuration="{Binding SpinDuration}" 
                          Pulse="{Binding PulseIsEnabled}" PulseDuration="{Binding PulseDuration}" 
                          FlipOrientation="{Binding FlipOrientation}" Rotation="{Binding Rotation}" 
                          Visibility="{Binding Visibility}" Width="50" Height="50"  Margin="10"/>


        <TextBlock Grid.Row="3" Grid.Column="0" Text="SvgAwesome"  TextWrapping="Wrap" FontWeight="Bold" Margin="5,0,0,0"/>
        <fas:SvgAwesome Grid.Row="3" Grid.Column="2"
                        Icon="{Binding SelectedIcon}" SwapOpacity="{Binding SwapOpacity}"
                        PrimaryColor="{Binding PrimaryColor}" SecondaryColor="{Binding SecondaryColor}" 
                        PrimaryOpacity="{Binding PrimaryOpacity}" SecondaryOpacity="{Binding SecondaryOpacity}"
                        Spin="{Binding SpinIsEnabled}" SpinDuration="{Binding SpinDuration}"
                        Pulse="{Binding PulseIsEnabled}" PulseDuration="{Binding PulseDuration}" 
                        FlipOrientation="{Binding FlipOrientation}" Rotation="{Binding Rotation}"
                        Height="50" Width="50"  Visibility="{Binding Visibility}" Margin="10"/>

        <TextBlock Grid.Row="4" Grid.Column="0" Text="Viewbox"  TextWrapping="Wrap" FontWeight="Bold" Margin="5,0,0,0"/>
        <Viewbox Grid.Row="4" Grid.Column="2"
                        fasap:FontAwesome.Icon="{Binding SelectedIcon}" fasap:FontAwesome.SwapOpacity="{Binding SwapOpacity}"
                        fasap:FontAwesome.PrimaryColor="{Binding PrimaryColor}" fasap:FontAwesome.SecondaryColor="{Binding SecondaryColor}" 
                        fasap:FontAwesome.PrimaryOpacity="{Binding PrimaryOpacity}" fasap:FontAwesome.SecondaryOpacity="{Binding SecondaryOpacity}"
                        fasap:FontAwesome.Spin="{Binding SpinIsEnabled}" fasap:FontAwesome.SpinDuration="{Binding SpinDuration}"
                        fasap:FontAwesome.Pulse="{Binding PulseIsEnabled}" fasap:FontAwesome.PulseDuration="{Binding PulseDuration}" 
                        fasap:FontAwesome.FlipOrientation="{Binding FlipOrientation}" fasap:FontAwesome.Rotation="{Binding Rotation}"
                        Height="50" Width="50" Visibility="{Binding Visibility}" Margin="10"/>

        <TextBlock Grid.Row="5" Grid.Column="0" Text="Button with Icon and Text" TextWrapping="Wrap" FontWeight="Bold"  Margin="5,0,0,0"/>
        <Button Grid.Row="5" Grid.Column="1" Height="32" Visibility="{Binding Visibility}" Margin="10" HorizontalAlignment="Center">
          <StackPanel Orientation="Horizontal">
            <faf:FontAwesome Icon="{Binding SelectedIcon}"
                         Spin="{Binding SpinIsEnabled}" SpinDuration="{Binding SpinDuration}" 
                         Pulse="{Binding PulseIsEnabled}" PulseDuration="{Binding PulseDuration}" 
                         FlipOrientation="{Binding FlipOrientation}" Rotation="{Binding Rotation}" 
                         Visibility="{Binding Visibility}" Margin="5,0,5,0"/>
            <TextBlock>Primary</TextBlock>
          </StackPanel>
        </Button>

        <Button Grid.Row="5" Grid.Column="2" Height="32" Visibility="{Binding Visibility}" Margin="10" HorizontalAlignment="Center">
          <StackPanel Orientation="Horizontal">
            <fas:SvgAwesome Icon="{Binding SelectedIcon}" SwapOpacity="{Binding SwapOpacity}"
                        PrimaryColor="{Binding PrimaryColor}" SecondaryColor="{Binding SecondaryColor}" 
                        PrimaryOpacity="{Binding PrimaryOpacity}" SecondaryOpacity="{Binding SecondaryOpacity}"
                        Spin="{Binding SpinIsEnabled}" SpinDuration="{Binding SpinDuration}"
                        Pulse="{Binding PulseIsEnabled}" PulseDuration="{Binding PulseDuration}" 
                        FlipOrientation="{Binding FlipOrientation}" Rotation="{Binding Rotation}"
                        Height="16" Width="16" Margin="5,0,5,0"/>
            <TextBlock>Primary</TextBlock>
          </StackPanel>
        </Button>
        <TextBlock Grid.Row="6" Grid.Column="0" Text="ImageSourceConverter"  TextWrapping="Wrap" FontWeight="Bold"  Margin="5,0,0,0"/>
        <Image  Grid.Row="6" Grid.Column="1" 
                Source="{Binding SelectedIcon, Converter={StaticResource ImageSourceConverter}}" Visibility="{Binding Visibility}" Width="50" Height="50" Margin="10"/>

        <Image Grid.Row="6" Grid.Column="2"  
               Source="{Binding SelectedIcon, Converter={StaticResource SvgImageSourceConverter}}" Visibility="{Binding Visibility}" Width="50" Height="50" Margin="10"/>

        <TextBlock Grid.Row="7" Grid.Column="0" Text="Attached Properties (ContentControl / Image / Viewbox)" FontWeight="Bold" TextWrapping="Wrap"  Margin="5,0,0,0"/>
        <Button Grid.Row="7" Grid.Column="1" Width="32" Height="32" 
                fafap:FontAwesome.Icon="{Binding SelectedIcon}" fafap:FontAwesome.SwapOpacity="{Binding SwapOpacity}"
                fafap:FontAwesome.PrimaryColor="{Binding PrimaryColor}" fafap:FontAwesome.SecondaryColor="{Binding SecondaryColor}" 
                fafap:FontAwesome.PrimaryOpacity="{Binding PrimaryOpacity}" fafap:FontAwesome.SecondaryOpacity="{Binding SecondaryOpacity}"
                FontSize="{Binding FontSize}" Visibility="{Binding Visibility}" Margin="10"></Button>
        <StackPanel Grid.Row="7" Grid.Column="2" Orientation="Horizontal">
            <Button fasap:FontAwesome.Icon="{Binding SelectedIcon}" fasap:FontAwesome.SwapOpacity="{Binding SwapOpacity}"
                fasap:FontAwesome.PrimaryColor="{Binding PrimaryColor}" fasap:FontAwesome.SecondaryColor="{Binding SecondaryColor}" 
                fasap:FontAwesome.PrimaryOpacity="{Binding PrimaryOpacity}" fasap:FontAwesome.SecondaryOpacity="{Binding SecondaryOpacity}"
                fasap:FontAwesome.Spin="{Binding SpinIsEnabled}" fasap:FontAwesome.SpinDuration="{Binding SpinDuration}"
                fasap:FontAwesome.Pulse="{Binding PulseIsEnabled}" fasap:FontAwesome.PulseDuration="{Binding PulseDuration}" 
                fasap:FontAwesome.FlipOrientation="{Binding FlipOrientation}" fasap:FontAwesome.Rotation="{Binding Rotation}"                
                Width="32" Height="32" Visibility="{Binding Visibility}" Margin="10" HorizontalAlignment="Center"></Button>

                    <Image fasap:FontAwesome.Icon="{Binding SelectedIcon}" fasap:FontAwesome.SwapOpacity="{Binding SwapOpacity}"
                        fasap:FontAwesome.PrimaryColor="{Binding PrimaryColor}" fasap:FontAwesome.SecondaryColor="{Binding SecondaryColor}" 
                        fasap:FontAwesome.PrimaryOpacity="{Binding PrimaryOpacity}" fasap:FontAwesome.SecondaryOpacity="{Binding SecondaryOpacity}"
                        fasap:FontAwesome.Spin="{Binding SpinIsEnabled}" fasap:FontAwesome.SpinDuration="{Binding SpinDuration}"
                        fasap:FontAwesome.Pulse="{Binding PulseIsEnabled}" fasap:FontAwesome.PulseDuration="{Binding PulseDuration}" 
                        fasap:FontAwesome.FlipOrientation="{Binding FlipOrientation}" fasap:FontAwesome.Rotation="{Binding Rotation}"
                        Height="50" Width="50" Visibility="{Binding Visibility}" Margin="10"/>

        </StackPanel>


        <TextBlock Grid.Row="8" Grid.Column="0" Text="TextBlock" TextWrapping="Wrap" FontWeight="Bold"  Margin="5,0,0,0"/>
        <TextBlock Grid.Row="8" Grid.Column="1" TextWrapping="Wrap" FontWeight="Bold" Margin="10" >
          <Run>This is an example with an </Run>
          <faf:FontAwesome Icon="{Binding SelectedIcon}" 
                         Spin="{Binding SpinIsEnabled}" SpinDuration="{Binding SpinDuration}" 
                         Pulse="{Binding PulseIsEnabled}" PulseDuration="{Binding PulseDuration}" 
                         FlipOrientation="{Binding FlipOrientation}" Rotation="{Binding Rotation}" 
                         Visibility="{Binding Visibility}" Margin="5,0,5,0"/>
          <Run>(icon) inside text</Run>
        </TextBlock>

        <TextBlock Grid.Row="8" Grid.Column="2" TextWrapping="Wrap" FontWeight="Bold" Margin="10" >
          <Run>This is an example with an </Run>
          <fas:SvgAwesome Icon="{Binding SelectedIcon}" SwapOpacity="{Binding SwapOpacity}"
                        PrimaryColor="{Binding PrimaryColor}" SecondaryColor="{Binding SecondaryColor}" 
                        PrimaryOpacity="{Binding PrimaryOpacity}" SecondaryOpacity="{Binding SecondaryOpacity}"
                        Spin="{Binding SpinIsEnabled}" SpinDuration="{Binding SpinDuration}"
                        Pulse="{Binding PulseIsEnabled}" PulseDuration="{Binding PulseDuration}" 
                        FlipOrientation="{Binding FlipOrientation}" Rotation="{Binding Rotation}"
                        Height="14" Width="14" Margin="5,0,5,0"/>
          <Run>(icon) inside text</Run>
        </TextBlock>
      </Grid>
    </Grid>
  </Grid>
</Window>
